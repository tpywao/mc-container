name: Build image for Minecraft Bedrock Server

on:
  push:
    branches:
      - main

env:
  # login to aws
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActions
  # build
  MCBE_SERVER_ZIP_PATH: ${{ vars.MCBE_SERVER_ZIP_PATH }}
  # push image to ecr
  ECR_REPOSITORY: mcbe/server
  # render task difinition
  ECS_TASK_DIFINITION_FAMILY: mcbe_server_family
  ECS_TASK_DIFINITION_REVISION: 6
  ECS_CONTAINER: server
  # deploy
  ECS_CLUSTER: mc-chiwanano
  ECS_SERVICE: mcbe_service
  # DOCKERHUB
  DOCKERHUB_REGISTRY: mc-container
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${ECR_REGISTRY}/${ECR_REPOSITORY}
          tags: |
            type=sha

      - name: Build and push
        id: build-push
        env:
          MCBE_SERVER_ZIP_PATH: ${{ vars.MCBE_SERVER_ZIP_PATH }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          # IAMロールでログイン
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-family: ${{ env.ECS_TASK_DIFINITION_FAMILY }}
          task-definition-revision: ${{ env.ECS_TASK_DIFINITION_REVISION }}
          container-name: ${{ env.ECS_CONTAINER }}
          image: ${{ steps.build.outputs.image_with_tag }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
